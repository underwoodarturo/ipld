{"version":3,"sources":["../node_modules/blakejs/util.js","../node_modules/hash-base/index.js","../node_modules/sha.js/sha256.js","../node_modules/sha.js/sha512.js","../node_modules/create-hash/md5.js","../node_modules/secp256k1/lib/index.js","../node_modules/multihashes/src/constants.js","../node_modules/pull-stream/pull.js","../node_modules/murmurhash3js/index.js","../node_modules/multihashing-async/src/utils.js","../node_modules/nodeify/index.js","../node_modules/is-promise/index.js","../node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","../node_modules/blakejs/blake2b.js","../node_modules/blakejs/blake2s.js","../node_modules/is-circular/lib/node.js","../node_modules/sha.js/sha.js","../node_modules/sha.js/sha1.js","../node_modules/sha.js/sha224.js","../node_modules/sha.js/sha384.js","../node_modules/create-hmac/legacy.js","../node_modules/base-x/index.js","../node_modules/secp256k1/lib/assert.js","../node_modules/secp256k1/lib/der.js","../node_modules/async/internal/initialParams.js","../node_modules/multihashing-async/src/crypto.js","../node_modules/murmurhash3js/lib/murmurHash3js.js","../node_modules/multihashing-async/src/crypto-sha1-2-browser.js","../node_modules/promise/index.js","../node_modules/multihashing-async/src/blake.js","../node_modules/bn.js/lib/bn.js","../node_modules/lodash/isObject.js","../node_modules/create-hash/browser.js","../node_modules/minimalistic-assert/index.js","../node_modules/multihashes/src/index.js","../node_modules/bs58/index.js","../node_modules/lodash/noop.js","../node_modules/cipher-base/index.js","../node_modules/async/internal/wrapAsync.js","../node_modules/multihashing-async/src/index.js","../node_modules/js-sha3/src/sha3.js","../node_modules/blakejs/index.js","../node_modules/sha.js/hash.js","../node_modules/create-hmac/browser.js","../node_modules/err-code/index.js","../node_modules/bip66/index.js","../node_modules/async/internal/slice.js","../node_modules/async/internal/onlyOnce.js","../node_modules/murmurhash3js-revisited/index.js","../node_modules/async/asyncify.js","../node_modules/is-circular/index.js","../node_modules/stable/stable.js","../node_modules/md5.js/index.js","../node_modules/ripemd160/index.js","../node_modules/sha.js/index.js","../node_modules/async/internal/setImmediate.js"],"names":["uint32ToHex","val","toString","substring","module","exports","normalizeInput","input","ret","Uint8Array","Buffer","Error","from","toHex","bytes","Array","prototype","map","call","n","join","debugPrint","label","arr","size","msg","i","length","toUpperCase","console","log","testSpeed","hashFn","N","M","startMs","Date","getTime","genMs","hashHex","hashMs","ms","Math","round","require","Transform","HashBase","blockSize","this","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","inherits","_transform","chunk","encoding","callback","error","update","err","_flush","push","digest","data","prefix","isBuffer","TypeError","throwIfNotStringOrBuffer","block","offset","_update","j","carry","_digest","undefined","fill","Hash","K","W","Sha256","init","_w","ch","x","y","z","maj","sigma0","sigma1","gamma0","_a","_b","_c","_d","_e","_f","_g","_h","a","b","c","d","e","f","g","h","readInt32BE","T1","T2","_hash","H","writeInt32BE","Sha512","Ch","xl","Gamma0","Gamma0l","Gamma1","Gamma1l","getCarry","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_hh","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","ah","bh","dh","eh","fh","gh","hh","al","bl","cl","dl","el","fl","gl","hl","xh","gamma0l","gamma1","gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","chl","t1l","t1h","t2l","t2h","writeInt64BE","l","MD5","buffer","assert","der","messages","initCompressedValue","value","defaultValue","isBoolean","COMPRESSED_TYPE_INVALID","secp256k1","privateKeyVerify","privateKey","EC_PRIVATE_KEY_TYPE_INVALID","privateKeyExport","compressed","isBufferLength","EC_PRIVATE_KEY_LENGTH_INVALID","publicKey","privateKeyImport","EC_PRIVATE_KEY_IMPORT_DER_FAIL","privateKeyNegate","privateKeyModInverse","privateKeyTweakAdd","tweak","TWEAK_TYPE_INVALID","TWEAK_LENGTH_INVALID","privateKeyTweakMul","publicKeyCreate","publicKeyConvert","EC_PUBLIC_KEY_TYPE_INVALID","isBufferLength2","EC_PUBLIC_KEY_LENGTH_INVALID","publicKeyVerify","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","isArray","EC_PUBLIC_KEYS_TYPE_INVALID","isLengthGTZero","EC_PUBLIC_KEYS_LENGTH_INVALID","signatureNormalize","signature","ECDSA_SIGNATURE_TYPE_INVALID","ECDSA_SIGNATURE_LENGTH_INVALID","signatureExport","sigObj","signatureImport","sig","ECDSA_SIGNATURE_PARSE_DER_FAIL","signatureImportLax","sign","message","options","MSG32_TYPE_INVALID","MSG32_LENGTH_INVALID","noncefn","isObject","OPTIONS_TYPE_INVALID","OPTIONS_DATA_TYPE_INVALID","OPTIONS_DATA_LENGTH_INVALID","isFunction","OPTIONS_NONCEFN_TYPE_INVALID","verify","recover","recovery","isNumber","RECOVERY_ID_TYPE_INVALID","isNumberInInterval","RECOVERY_ID_VALUE_INVALID","ecdh","ecdhUnsafe","names","Object","freeze","codes","defaultLengths","pull","arguments","args","read","ref","unshift","apply","source","s","sink","toCallback","doWork","res","process","nextTick","toBuf","other","result","fromString","_input","fromNumberTo32BitBuf","number","Promise","isPromise","nodeify","promise","cb","then","nodeifyThis","extend","prom","NodeifyPromise","fn","setImmediate","setTimeout","create","constructor","obj","root","library","_validBytes","ArrayBuffer","isView","Number","isInteger","_x86Multiply","m","_x86Rotl","_x86Fmix","_x64Add","o","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","x86","hash32","seed","inputValidation","remainder","blocks","h1","k1","c1","c2","hash128","h2","h3","h4","k2","k3","k4","c3","c4","slice","x64","murmurHash3","util","ADD64AA","v","o0","o1","ADD64AC","b0","b1","B2B_GET32","B2B_G","ix","iy","x0","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","blake2bCompress","ctx","last","t","blake2bInit","outlen","key","keylen","blake2bUpdate","blake2bFinal","out","blake2b","blake2bHex","output","B2S_GET32","B2S_G","ROTR32","BLAKE2S_IV","SIGMA","blake2sCompress","blake2sInit","blake2sUpdate","blake2sFinal","blake2s","blake2sHex","Node","next","contains","cursor","Sha","rotl30","num","ft","Sha1","rotl5","Sha224","SHA512","Sha384","Base","ZEROS","alloc","Hmac","alg","_alg","_key","concat","ipad","_ipad","opad","_opad","_final","ALPHABET","BASE_MAP","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","it","vch","encode","pbegin","pend","b58","str","repeat","decode","string","RangeError","length1","length2","bip66","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","copy","index","lenb","len","r","lenR","posR","lenS","posS","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","defineProperty","default","_slice2","pop","_slice","__esModule","sha3","murmur3","utils","sha","sha1","sha2256","sha2512","sha3512","sha3_512","sha3384","sha3_384","sha3256","sha3_256","sha3224","sha3_224","shake128","shake_128","shake256","shake_256","keccak224","keccak_224","keccak256","keccak_256","keccak384","keccak_384","keccak512","keccak_512","murmur3128","murmur332","addBlake","dblSha2256","buf","firstHash","webCrypto","self","crypto","subtle","webkitSubtle","msCrypto","getWebCrypto","webCryptoHash","type","name","onerror","oncomplete","target","raw","setImediate","extensions","resolver","defer","isResolved","isFulfilled","waiting","running","skipTimeout","shift","eb","timeoutDone","ex","reject","fulfill","use","extension","blake","makeB2Hash","hf","table","ctor","superCtor","super_","TempCtor","BN","base","endian","isBN","negative","words","red","_init","wordSize","parseHex","start","end","min","parseBase","mul","max","left","right","cmp","_initNumber","_initArray","replace","_parseHex","_parseBase","strip","toArray","ceil","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","lo","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","bl0","bh0","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","split","imulK","outLen","prev","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","u","RIPEMD160","hash","toLowerCase","equal","bs58","cs","varint","validate","multihash","toHexString","fromHexString","toB58String","fromB58String","encoded","code","isValidCode","hashfn","coerceCode","isAppCode","basex","StringDecoder","CipherBase","hashMode","_finalOrDigest","final","__final","_decoder","_encoding","inputEnc","outputEnc","outData","_toString","setAutoPadding","getAuthTag","setAuthTag","setAAD","done","enc","fin","write","isAsync","_asyncify","_asyncify2","supportsSymbol","Symbol","toStringTag","asyncFn","Multihashing","func","createHash","functions","INPUT_ERROR","WINDOW","window","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","versions","node","global","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","define","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","method","createMethod","algorithms","bytepad","Kmac","methodNames","algorithm","methodName","newMethodName","reset","finalized","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","encodeString","strs","paddingBytes","finalize","hex","arrayBuffer","array","c0","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","b2b","b2s","finalSize","_finalSize","_len","accum","assigned","rem","writeUInt32BE","lowBits","highBits","Legacy","md5","blocksize","props","check","arrayLike","newLen","newArr","idx","callFn","_initialParams2","_isObject2","invokeCallback","_interopRequireDefault","_setImmediate2","rethrow","_isCircular","parentList","stable","comp","exec","String","localeCompare","chk","pass","inplace","li","ri","dbl","factory","ARRAY16","rotl","fnF","fnG","fnH","fnI","readInt32LE","writeUInt32LE","writeInt32LE","zl","zr","sl","sr","hr","fn1","fn2","fn3","fn4","fn5","ar","br","cr","dr","er","tl","tr","Algorithm","sha224","sha256","sha384","sha512","hasNextTick","hasSetImmediate","fallback","wrap","_defer"],"mappings":"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f,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,YAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,aAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,aAAc,MACd,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,cAAe,MACf,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,eAAgB,MAChB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,KACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,gBAAiB,MACjB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,MAClB,iBAAkB,QAGpB1P,EAAQ2P,MAAQF,OAAOC,OAAO,CAC5B,GAAM,OACN,GAAM,WACN,GAAM,WACN,GAAM,eACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,WACN,GAAM,YACN,GAAM,YACN,GAAM,aACN,GAAM,aACN,GAAM,aACN,GAAM,aACN,GAAM,cACN,GAAM,aAGN,MAAQ,YACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,YACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cAGR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,aACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,cACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,eACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,gBACR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","file":"static/js/1.f13119c1.chunk.js","sourcesContent":["var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar assert = require('./assert')\nvar der = require('./der')\nvar messages = require('./messages.json')\n\nfunction initCompressedValue (value, defaultValue) {\n  if (value === undefined) return defaultValue\n\n  assert.isBoolean(value, messages.COMPRESSED_TYPE_INVALID)\n  return value\n}\n\nmodule.exports = function (secp256k1) {\n  return {\n    privateKeyVerify: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      return privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)\n    },\n\n    privateKeyExport: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n      var publicKey = secp256k1.privateKeyExport(privateKey, compressed)\n\n      return der.privateKeyExport(privateKey, publicKey, compressed)\n    },\n\n    privateKeyImport: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n\n      privateKey = der.privateKeyImport(privateKey)\n      if (privateKey && privateKey.length === 32 && secp256k1.privateKeyVerify(privateKey)) return privateKey\n\n      throw new Error(messages.EC_PRIVATE_KEY_IMPORT_DER_FAIL)\n    },\n\n    privateKeyNegate: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyNegate(privateKey)\n    },\n\n    privateKeyModInverse: function (privateKey) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.privateKeyModInverse(privateKey)\n    },\n\n    privateKeyTweakAdd: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakAdd(privateKey, tweak)\n    },\n\n    privateKeyTweakMul: function (privateKey, tweak) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      return secp256k1.privateKeyTweakMul(privateKey, tweak)\n    },\n\n    publicKeyCreate: function (privateKey, compressed) {\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCreate(privateKey, compressed)\n    },\n\n    publicKeyConvert: function (publicKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyConvert(publicKey, compressed)\n    },\n\n    publicKeyVerify: function (publicKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      return secp256k1.publicKeyVerify(publicKey)\n    },\n\n    publicKeyTweakAdd: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakAdd(publicKey, tweak, compressed)\n    },\n\n    publicKeyTweakMul: function (publicKey, tweak, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(tweak, messages.TWEAK_TYPE_INVALID)\n      assert.isBufferLength(tweak, 32, messages.TWEAK_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyTweakMul(publicKey, tweak, compressed)\n    },\n\n    publicKeyCombine: function (publicKeys, compressed) {\n      assert.isArray(publicKeys, messages.EC_PUBLIC_KEYS_TYPE_INVALID)\n      assert.isLengthGTZero(publicKeys, messages.EC_PUBLIC_KEYS_LENGTH_INVALID)\n      for (var i = 0; i < publicKeys.length; ++i) {\n        assert.isBuffer(publicKeys[i], messages.EC_PUBLIC_KEY_TYPE_INVALID)\n        assert.isBufferLength2(publicKeys[i], 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n      }\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.publicKeyCombine(publicKeys, compressed)\n    },\n\n    signatureNormalize: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      return secp256k1.signatureNormalize(signature)\n    },\n\n    signatureExport: function (signature) {\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = secp256k1.signatureExport(signature)\n      return der.signatureExport(sigObj)\n    },\n\n    signatureImport: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImport(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    signatureImportLax: function (sig) {\n      assert.isBuffer(sig, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isLengthGTZero(sig, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      var sigObj = der.signatureImportLax(sig)\n      if (sigObj) return secp256k1.signatureImport(sigObj)\n\n      throw new Error(messages.ECDSA_SIGNATURE_PARSE_DER_FAIL)\n    },\n\n    sign: function (message, privateKey, options) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      var data = null\n      var noncefn = null\n      if (options !== undefined) {\n        assert.isObject(options, messages.OPTIONS_TYPE_INVALID)\n\n        if (options.data !== undefined) {\n          assert.isBuffer(options.data, messages.OPTIONS_DATA_TYPE_INVALID)\n          assert.isBufferLength(options.data, 32, messages.OPTIONS_DATA_LENGTH_INVALID)\n          data = options.data\n        }\n\n        if (options.noncefn !== undefined) {\n          assert.isFunction(options.noncefn, messages.OPTIONS_NONCEFN_TYPE_INVALID)\n          noncefn = options.noncefn\n        }\n      }\n\n      return secp256k1.sign(message, privateKey, noncefn, data)\n    },\n\n    verify: function (message, signature, publicKey) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      return secp256k1.verify(message, signature, publicKey)\n    },\n\n    recover: function (message, signature, recovery, compressed) {\n      assert.isBuffer(message, messages.MSG32_TYPE_INVALID)\n      assert.isBufferLength(message, 32, messages.MSG32_LENGTH_INVALID)\n\n      assert.isBuffer(signature, messages.ECDSA_SIGNATURE_TYPE_INVALID)\n      assert.isBufferLength(signature, 64, messages.ECDSA_SIGNATURE_LENGTH_INVALID)\n\n      assert.isNumber(recovery, messages.RECOVERY_ID_TYPE_INVALID)\n      assert.isNumberInInterval(recovery, -1, 4, messages.RECOVERY_ID_VALUE_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.recover(message, signature, recovery, compressed)\n    },\n\n    ecdh: function (publicKey, privateKey) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      return secp256k1.ecdh(publicKey, privateKey)\n    },\n\n    ecdhUnsafe: function (publicKey, privateKey, compressed) {\n      assert.isBuffer(publicKey, messages.EC_PUBLIC_KEY_TYPE_INVALID)\n      assert.isBufferLength2(publicKey, 33, 65, messages.EC_PUBLIC_KEY_LENGTH_INVALID)\n\n      assert.isBuffer(privateKey, messages.EC_PRIVATE_KEY_TYPE_INVALID)\n      assert.isBufferLength(privateKey, 32, messages.EC_PRIVATE_KEY_LENGTH_INVALID)\n\n      compressed = initCompressedValue(compressed, true)\n\n      return secp256k1.ecdhUnsafe(publicKey, privateKey, compressed)\n    }\n  }\n}\n","/* eslint quote-props: off */\n/* eslint key-spacing: off */\n'use strict'\n\nexports.names = Object.freeze({\n  'id':         0x0,\n  'sha1':       0x11,\n  'sha2-256':   0x12,\n  'sha2-512':   0x13,\n  'dbl-sha2-256': 0x56,\n  'sha3-224':   0x17,\n  'sha3-256':   0x16,\n  'sha3-384':   0x15,\n  'sha3-512':   0x14,\n  'shake-128':  0x18,\n  'shake-256':  0x19,\n  'keccak-224': 0x1A,\n  'keccak-256': 0x1B,\n  'keccak-384': 0x1C,\n  'keccak-512': 0x1D,\n  'murmur3-128': 0x22,\n  'murmur3-32':  0x23,\n  'blake2b-8':   0xb201,\n  'blake2b-16':  0xb202,\n  'blake2b-24':  0xb203,\n  'blake2b-32':  0xb204,\n  'blake2b-40':  0xb205,\n  'blake2b-48':  0xb206,\n  'blake2b-56':  0xb207,\n  'blake2b-64':  0xb208,\n  'blake2b-72':  0xb209,\n  'blake2b-80':  0xb20a,\n  'blake2b-88':  0xb20b,\n  'blake2b-96':  0xb20c,\n  'blake2b-104': 0xb20d,\n  'blake2b-112': 0xb20e,\n  'blake2b-120': 0xb20f,\n  'blake2b-128': 0xb210,\n  'blake2b-136': 0xb211,\n  'blake2b-144': 0xb212,\n  'blake2b-152': 0xb213,\n  'blake2b-160': 0xb214,\n  'blake2b-168': 0xb215,\n  'blake2b-176': 0xb216,\n  'blake2b-184': 0xb217,\n  'blake2b-192': 0xb218,\n  'blake2b-200': 0xb219,\n  'blake2b-208': 0xb21a,\n  'blake2b-216': 0xb21b,\n  'blake2b-224': 0xb21c,\n  'blake2b-232': 0xb21d,\n  'blake2b-240': 0xb21e,\n  'blake2b-248': 0xb21f,\n  'blake2b-256': 0xb220,\n  'blake2b-264': 0xb221,\n  'blake2b-272': 0xb222,\n  'blake2b-280': 0xb223,\n  'blake2b-288': 0xb224,\n  'blake2b-296': 0xb225,\n  'blake2b-304': 0xb226,\n  'blake2b-312': 0xb227,\n  'blake2b-320': 0xb228,\n  'blake2b-328': 0xb229,\n  'blake2b-336': 0xb22a,\n  'blake2b-344': 0xb22b,\n  'blake2b-352': 0xb22c,\n  'blake2b-360': 0xb22d,\n  'blake2b-368': 0xb22e,\n  'blake2b-376': 0xb22f,\n  'blake2b-384': 0xb230,\n  'blake2b-392': 0xb231,\n  'blake2b-400': 0xb232,\n  'blake2b-408': 0xb233,\n  'blake2b-416': 0xb234,\n  'blake2b-424': 0xb235,\n  'blake2b-432': 0xb236,\n  'blake2b-440': 0xb237,\n  'blake2b-448': 0xb238,\n  'blake2b-456': 0xb239,\n  'blake2b-464': 0xb23a,\n  'blake2b-472': 0xb23b,\n  'blake2b-480': 0xb23c,\n  'blake2b-488': 0xb23d,\n  'blake2b-496': 0xb23e,\n  'blake2b-504': 0xb23f,\n  'blake2b-512': 0xb240,\n  'blake2s-8':   0xb241,\n  'blake2s-16':  0xb242,\n  'blake2s-24':  0xb243,\n  'blake2s-32':  0xb244,\n  'blake2s-40':  0xb245,\n  'blake2s-48':  0xb246,\n  'blake2s-56':  0xb247,\n  'blake2s-64':  0xb248,\n  'blake2s-72':  0xb249,\n  'blake2s-80':  0xb24a,\n  'blake2s-88':  0xb24b,\n  'blake2s-96':  0xb24c,\n  'blake2s-104': 0xb24d,\n  'blake2s-112': 0xb24e,\n  'blake2s-120': 0xb24f,\n  'blake2s-128': 0xb250,\n  'blake2s-136': 0xb251,\n  'blake2s-144': 0xb252,\n  'blake2s-152': 0xb253,\n  'blake2s-160': 0xb254,\n  'blake2s-168': 0xb255,\n  'blake2s-176': 0xb256,\n  'blake2s-184': 0xb257,\n  'blake2s-192': 0xb258,\n  'blake2s-200': 0xb259,\n  'blake2s-208': 0xb25a,\n  'blake2s-216': 0xb25b,\n  'blake2s-224': 0xb25c,\n  'blake2s-232': 0xb25d,\n  'blake2s-240': 0xb25e,\n  'blake2s-248': 0xb25f,\n  'blake2s-256': 0xb260,\n  'Skein256-8': 0xb301,\n  'Skein256-16': 0xb302,\n  'Skein256-24': 0xb303,\n  'Skein256-32': 0xb304,\n  'Skein256-40': 0xb305,\n  'Skein256-48': 0xb306,\n  'Skein256-56': 0xb307,\n  'Skein256-64': 0xb308,\n  'Skein256-72': 0xb309,\n  'Skein256-80': 0xb30a,\n  'Skein256-88': 0xb30b,\n  'Skein256-96': 0xb30c,\n  'Skein256-104': 0xb30d,\n  'Skein256-112': 0xb30e,\n  'Skein256-120': 0xb30f,\n  'Skein256-128': 0xb310,\n  'Skein256-136': 0xb311,\n  'Skein256-144': 0xb312,\n  'Skein256-152': 0xb313,\n  'Skein256-160': 0xb314,\n  'Skein256-168': 0xb315,\n  'Skein256-176': 0xb316,\n  'Skein256-184': 0xb317,\n  'Skein256-192': 0xb318,\n  'Skein256-200': 0xb319,\n  'Skein256-208': 0xb31a,\n  'Skein256-216': 0xb31b,\n  'Skein256-224': 0xb31c,\n  'Skein256-232': 0xb31d,\n  'Skein256-240': 0xb31e,\n  'Skein256-248': 0xb31f,\n  'Skein256-256': 0xb320,\n  'Skein512-8': 0xb321,\n  'Skein512-16': 0xb322,\n  'Skein512-24': 0xb323,\n  'Skein512-32': 0xb324,\n  'Skein512-40': 0xb325,\n  'Skein512-48': 0xb326,\n  'Skein512-56': 0xb327,\n  'Skein512-64': 0xb328,\n  'Skein512-72': 0xb329,\n  'Skein512-80': 0xb32a,\n  'Skein512-88': 0xb32b,\n  'Skein512-96': 0xb32c,\n  'Skein512-104': 0xb32d,\n  'Skein512-112': 0xb32e,\n  'Skein512-120': 0xb32f,\n  'Skein512-128': 0xb330,\n  'Skein512-136': 0xb331,\n  'Skein512-144': 0xb332,\n  'Skein512-152': 0xb333,\n  'Skein512-160': 0xb334,\n  'Skein512-168': 0xb335,\n  'Skein512-176': 0xb336,\n  'Skein512-184': 0xb337,\n  'Skein512-192': 0xb338,\n  'Skein512-200': 0xb339,\n  'Skein512-208': 0xb33a,\n  'Skein512-216': 0xb33b,\n  'Skein512-224': 0xb33c,\n  'Skein512-232': 0xb33d,\n  'Skein512-240': 0xb33e,\n  'Skein512-248': 0xb33f,\n  'Skein512-256': 0xb340,\n  'Skein512-264': 0xb341,\n  'Skein512-272': 0xb342,\n  'Skein512-280': 0xb343,\n  'Skein512-288': 0xb344,\n  'Skein512-296': 0xb345,\n  'Skein512-304': 0xb346,\n  'Skein512-312': 0xb347,\n  'Skein512-320': 0xb348,\n  'Skein512-328': 0xb349,\n  'Skein512-336': 0xb34a,\n  'Skein512-344': 0xb34b,\n  'Skein512-352': 0xb34c,\n  'Skein512-360': 0xb34d,\n  'Skein512-368': 0xb34e,\n  'Skein512-376': 0xb34f,\n  'Skein512-384': 0xb350,\n  'Skein512-392': 0xb351,\n  'Skein512-400': 0xb352,\n  'Skein512-408': 0xb353,\n  'Skein512-416': 0xb354,\n  'Skein512-424': 0xb355,\n  'Skein512-432': 0xb356,\n  'Skein512-440': 0xb357,\n  'Skein512-448': 0xb358,\n  'Skein512-456': 0xb359,\n  'Skein512-464': 0xb35a,\n  'Skein512-472': 0xb35b,\n  'Skein512-480': 0xb35c,\n  'Skein512-488': 0xb35d,\n  'Skein512-496': 0xb35e,\n  'Skein512-504': 0xb35f,\n  'Skein512-512': 0xb360,\n  'Skein1024-8': 0xb361,\n  'Skein1024-16': 0xb362,\n  'Skein1024-24': 0xb363,\n  'Skein1024-32': 0xb364,\n  'Skein1024-40': 0xb365,\n  'Skein1024-48': 0xb366,\n  'Skein1024-56': 0xb367,\n  'Skein1024-64': 0xb368,\n  'Skein1024-72': 0xb369,\n  'Skein1024-80': 0xb36a,\n  'Skein1024-88': 0xb36b,\n  'Skein1024-96': 0xb36c,\n  'Skein1024-104': 0xb36d,\n  'Skein1024-112': 0xb36e,\n  'Skein1024-120': 0xb36f,\n  'Skein1024-128': 0xb370,\n  'Skein1024-136': 0xb371,\n  'Skein1024-144': 0xb372,\n  'Skein1024-152': 0xb373,\n  'Skein1024-160': 0xb374,\n  'Skein1024-168': 0xb375,\n  'Skein1024-176': 0xb376,\n  'Skein1024-184': 0xb377,\n  'Skein1024-192': 0xb378,\n  'Skein1024-200': 0xb379,\n  'Skein1024-208': 0xb37a,\n  'Skein1024-216': 0xb37b,\n  'Skein1024-224': 0xb37c,\n  'Skein1024-232': 0xb37d,\n  'Skein1024-240': 0xb37e,\n  'Skein1024-248': 0xb37f,\n  'Skein1024-256': 0xb380,\n  'Skein1024-264': 0xb381,\n  'Skein1024-272': 0xb382,\n  'Skein1024-280': 0xb383,\n  'Skein1024-288': 0xb384,\n  'Skein1024-296': 0xb385,\n  'Skein1024-304': 0xb386,\n  'Skein1024-312': 0xb387,\n  'Skein1024-320': 0xb388,\n  'Skein1024-328': 0xb389,\n  'Skein1024-336': 0xb38a,\n  'Skein1024-344': 0xb38b,\n  'Skein1024-352': 0xb38c,\n  'Skein1024-360': 0xb38d,\n  'Skein1024-368': 0xb38e,\n  'Skein1024-376': 0xb38f,\n  'Skein1024-384': 0xb390,\n  'Skein1024-392': 0xb391,\n  'Skein1024-400': 0xb392,\n  'Skein1024-408': 0xb393,\n  'Skein1024-416': 0xb394,\n  'Skein1024-424': 0xb395,\n  'Skein1024-432': 0xb396,\n  'Skein1024-440': 0xb397,\n  'Skein1024-448': 0xb398,\n  'Skein1024-456': 0xb399,\n  'Skein1024-464': 0xb39a,\n  'Skein1024-472': 0xb39b,\n  'Skein1024-480': 0xb39c,\n  'Skein1024-488': 0xb39d,\n  'Skein1024-496': 0xb39e,\n  'Skein1024-504': 0xb39f,\n  'Skein1024-512': 0xb3a0,\n  'Skein1024-520': 0xb3a1,\n  'Skein1024-528': 0xb3a2,\n  'Skein1024-536': 0xb3a3,\n  'Skein1024-544': 0xb3a4,\n  'Skein1024-552': 0xb3a5,\n  'Skein1024-560': 0xb3a6,\n  'Skein1024-568': 0xb3a7,\n  'Skein1024-576': 0xb3a8,\n  'Skein1024-584': 0xb3a9,\n  'Skein1024-592': 0xb3aa,\n  'Skein1024-600': 0xb3ab,\n  'Skein1024-608': 0xb3ac,\n  'Skein1024-616': 0xb3ad,\n  'Skein1024-624': 0xb3ae,\n  'Skein1024-632': 0xb3af,\n  'Skein1024-640': 0xb3b0,\n  'Skein1024-648': 0xb3b1,\n  'Skein1024-656': 0xb3b2,\n  'Skein1024-664': 0xb3b3,\n  'Skein1024-672': 0xb3b4,\n  'Skein1024-680': 0xb3b5,\n  'Skein1024-688': 0xb3b6,\n  'Skein1024-696': 0xb3b7,\n  'Skein1024-704': 0xb3b8,\n  'Skein1024-712': 0xb3b9,\n  'Skein1024-720': 0xb3ba,\n  'Skein1024-728': 0xb3bb,\n  'Skein1024-736': 0xb3bc,\n  'Skein1024-744': 0xb3bd,\n  'Skein1024-752': 0xb3be,\n  'Skein1024-760': 0xb3bf,\n  'Skein1024-768': 0xb3c0,\n  'Skein1024-776': 0xb3c1,\n  'Skein1024-784': 0xb3c2,\n  'Skein1024-792': 0xb3c3,\n  'Skein1024-800': 0xb3c4,\n  'Skein1024-808': 0xb3c5,\n  'Skein1024-816': 0xb3c6,\n  'Skein1024-824': 0xb3c7,\n  'Skein1024-832': 0xb3c8,\n  'Skein1024-840': 0xb3c9,\n  'Skein1024-848': 0xb3ca,\n  'Skein1024-856': 0xb3cb,\n  'Skein1024-864': 0xb3cc,\n  'Skein1024-872': 0xb3cd,\n  'Skein1024-880': 0xb3ce,\n  'Skein1024-888': 0xb3cf,\n  'Skein1024-896': 0xb3d0,\n  'Skein1024-904': 0xb3d1,\n  'Skein1024-912': 0xb3d2,\n  'Skein1024-920': 0xb3d3,\n  'Skein1024-928': 0xb3d4,\n  'Skein1024-936': 0xb3d5,\n  'Skein1024-944': 0xb3d6,\n  'Skein1024-952': 0xb3d7,\n  'Skein1024-960': 0xb3d8,\n  'Skein1024-968': 0xb3d9,\n  'Skein1024-976': 0xb3da,\n  'Skein1024-984': 0xb3db,\n  'Skein1024-992': 0xb3dc,\n  'Skein1024-1000': 0xb3dd,\n  'Skein1024-1008': 0xb3de,\n  'Skein1024-1016': 0xb3df,\n  'Skein1024-1024': 0xb3e0\n})\n\nexports.codes = Object.freeze({\n  0x11: 'sha1',\n  0x12: 'sha2-256',\n  0x13: 'sha2-512',\n  0x56: 'dbl-sha2-256',\n  0x17: 'sha3-224',\n  0x16: 'sha3-256',\n  0x15: 'sha3-384',\n  0x14: 'sha3-512',\n  0x18: 'shake-128',\n  0x19: 'shake-256',\n  0x1A: 'keccak-224',\n  0x1B: 'keccak-256',\n  0x1C: 'keccak-384',\n  0x1D: 'keccak-512',\n  0x22: 'murmur3-128',\n  0x23: 'murmur3-32',\n\n  // blake2\n  0xb201: 'blake2b-8',\n  0xb202: 'blake2b-16',\n  0xb203: 'blake2b-24',\n  0xb204: 'blake2b-32',\n  0xb205: 'blake2b-40',\n  0xb206: 'blake2b-48',\n  0xb207: 'blake2b-56',\n  0xb208: 'blake2b-64',\n  0xb209: 'blake2b-72',\n  0xb20a: 'blake2b-80',\n  0xb20b: 'blake2b-88',\n  0xb20c: 'blake2b-96',\n  0xb20d: 'blake2b-104',\n  0xb20e: 'blake2b-112',\n  0xb20f: 'blake2b-120',\n  0xb210: 'blake2b-128',\n  0xb211: 'blake2b-136',\n  0xb212: 'blake2b-144',\n  0xb213: 'blake2b-152',\n  0xb214: 'blake2b-160',\n  0xb215: 'blake2b-168',\n  0xb216: 'blake2b-176',\n  0xb217: 'blake2b-184',\n  0xb218: 'blake2b-192',\n  0xb219: 'blake2b-200',\n  0xb21a: 'blake2b-208',\n  0xb21b: 'blake2b-216',\n  0xb21c: 'blake2b-224',\n  0xb21d: 'blake2b-232',\n  0xb21e: 'blake2b-240',\n  0xb21f: 'blake2b-248',\n  0xb220: 'blake2b-256',\n  0xb221: 'blake2b-264',\n  0xb222: 'blake2b-272',\n  0xb223: 'blake2b-280',\n  0xb224: 'blake2b-288',\n  0xb225: 'blake2b-296',\n  0xb226: 'blake2b-304',\n  0xb227: 'blake2b-312',\n  0xb228: 'blake2b-320',\n  0xb229: 'blake2b-328',\n  0xb22a: 'blake2b-336',\n  0xb22b: 'blake2b-344',\n  0xb22c: 'blake2b-352',\n  0xb22d: 'blake2b-360',\n  0xb22e: 'blake2b-368',\n  0xb22f: 'blake2b-376',\n  0xb230: 'blake2b-384',\n  0xb231: 'blake2b-392',\n  0xb232: 'blake2b-400',\n  0xb233: 'blake2b-408',\n  0xb234: 'blake2b-416',\n  0xb235: 'blake2b-424',\n  0xb236: 'blake2b-432',\n  0xb237: 'blake2b-440',\n  0xb238: 'blake2b-448',\n  0xb239: 'blake2b-456',\n  0xb23a: 'blake2b-464',\n  0xb23b: 'blake2b-472',\n  0xb23c: 'blake2b-480',\n  0xb23d: 'blake2b-488',\n  0xb23e: 'blake2b-496',\n  0xb23f: 'blake2b-504',\n  0xb240: 'blake2b-512',\n  0xb241: 'blake2s-8',\n  0xb242: 'blake2s-16',\n  0xb243: 'blake2s-24',\n  0xb244: 'blake2s-32',\n  0xb245: 'blake2s-40',\n  0xb246: 'blake2s-48',\n  0xb247: 'blake2s-56',\n  0xb248: 'blake2s-64',\n  0xb249: 'blake2s-72',\n  0xb24a: 'blake2s-80',\n  0xb24b: 'blake2s-88',\n  0xb24c: 'blake2s-96',\n  0xb24d: 'blake2s-104',\n  0xb24e: 'blake2s-112',\n  0xb24f: 'blake2s-120',\n  0xb250: 'blake2s-128',\n  0xb251: 'blake2s-136',\n  0xb252: 'blake2s-144',\n  0xb253: 'blake2s-152',\n  0xb254: 'blake2s-160',\n  0xb255: 'blake2s-168',\n  0xb256: 'blake2s-176',\n  0xb257: 'blake2s-184',\n  0xb258: 'blake2s-192',\n  0xb259: 'blake2s-200',\n  0xb25a: 'blake2s-208',\n  0xb25b: 'blake2s-216',\n  0xb25c: 'blake2s-224',\n  0xb25d: 'blake2s-232',\n  0xb25e: 'blake2s-240',\n  0xb25f: 'blake2s-248',\n  0xb260: 'blake2s-256',\n\n  // skein\n  0xb301: 'Skein256-8',\n  0xb302: 'Skein256-16',\n  0xb303: 'Skein256-24',\n  0xb304: 'Skein256-32',\n  0xb305: 'Skein256-40',\n  0xb306: 'Skein256-48',\n  0xb307: 'Skein256-56',\n  0xb308: 'Skein256-64',\n  0xb309: 'Skein256-72',\n  0xb30a: 'Skein256-80',\n  0xb30b: 'Skein256-88',\n  0xb30c: 'Skein256-96',\n  0xb30d: 'Skein256-104',\n  0xb30e: 'Skein256-112',\n  0xb30f: 'Skein256-120',\n  0xb310: 'Skein256-128',\n  0xb311: 'Skein256-136',\n  0xb312: 'Skein256-144',\n  0xb313: 'Skein256-152',\n  0xb314: 'Skein256-160',\n  0xb315: 'Skein256-168',\n  0xb316: 'Skein256-176',\n  0xb317: 'Skein256-184',\n  0xb318: 'Skein256-192',\n  0xb319: 'Skein256-200',\n  0xb31a: 'Skein256-208',\n  0xb31b: 'Skein256-216',\n  0xb31c: 'Skein256-224',\n  0xb31d: 'Skein256-232',\n  0xb31e: 'Skein256-240',\n  0xb31f: 'Skein256-248',\n  0xb320: 'Skein256-256',\n  0xb321: 'Skein512-8',\n  0xb322: 'Skein512-16',\n  0xb323: 'Skein512-24',\n  0xb324: 'Skein512-32',\n  0xb325: 'Skein512-40',\n  0xb326: 'Skein512-48',\n  0xb327: 'Skein512-56',\n  0xb328: 'Skein512-64',\n  0xb329: 'Skein512-72',\n  0xb32a: 'Skein512-80',\n  0xb32b: 'Skein512-88',\n  0xb32c: 'Skein512-96',\n  0xb32d: 'Skein512-104',\n  0xb32e: 'Skein512-112',\n  0xb32f: 'Skein512-120',\n  0xb330: 'Skein512-128',\n  0xb331: 'Skein512-136',\n  0xb332: 'Skein512-144',\n  0xb333: 'Skein512-152',\n  0xb334: 'Skein512-160',\n  0xb335: 'Skein512-168',\n  0xb336: 'Skein512-176',\n  0xb337: 'Skein512-184',\n  0xb338: 'Skein512-192',\n  0xb339: 'Skein512-200',\n  0xb33a: 'Skein512-208',\n  0xb33b: 'Skein512-216',\n  0xb33c: 'Skein512-224',\n  0xb33d: 'Skein512-232',\n  0xb33e: 'Skein512-240',\n  0xb33f: 'Skein512-248',\n  0xb340: 'Skein512-256',\n  0xb341: 'Skein512-264',\n  0xb342: 'Skein512-272',\n  0xb343: 'Skein512-280',\n  0xb344: 'Skein512-288',\n  0xb345: 'Skein512-296',\n  0xb346: 'Skein512-304',\n  0xb347: 'Skein512-312',\n  0xb348: 'Skein512-320',\n  0xb349: 'Skein512-328',\n  0xb34a: 'Skein512-336',\n  0xb34b: 'Skein512-344',\n  0xb34c: 'Skein512-352',\n  0xb34d: 'Skein512-360',\n  0xb34e: 'Skein512-368',\n  0xb34f: 'Skein512-376',\n  0xb350: 'Skein512-384',\n  0xb351: 'Skein512-392',\n  0xb352: 'Skein512-400',\n  0xb353: 'Skein512-408',\n  0xb354: 'Skein512-416',\n  0xb355: 'Skein512-424',\n  0xb356: 'Skein512-432',\n  0xb357: 'Skein512-440',\n  0xb358: 'Skein512-448',\n  0xb359: 'Skein512-456',\n  0xb35a: 'Skein512-464',\n  0xb35b: 'Skein512-472',\n  0xb35c: 'Skein512-480',\n  0xb35d: 'Skein512-488',\n  0xb35e: 'Skein512-496',\n  0xb35f: 'Skein512-504',\n  0xb360: 'Skein512-512',\n  0xb361: 'Skein1024-8',\n  0xb362: 'Skein1024-16',\n  0xb363: 'Skein1024-24',\n  0xb364: 'Skein1024-32',\n  0xb365: 'Skein1024-40',\n  0xb366: 'Skein1024-48',\n  0xb367: 'Skein1024-56',\n  0xb368: 'Skein1024-64',\n  0xb369: 'Skein1024-72',\n  0xb36a: 'Skein1024-80',\n  0xb36b: 'Skein1024-88',\n  0xb36c: 'Skein1024-96',\n  0xb36d: 'Skein1024-104',\n  0xb36e: 'Skein1024-112',\n  0xb36f: 'Skein1024-120',\n  0xb370: 'Skein1024-128',\n  0xb371: 'Skein1024-136',\n  0xb372: 'Skein1024-144',\n  0xb373: 'Skein1024-152',\n  0xb374: 'Skein1024-160',\n  0xb375: 'Skein1024-168',\n  0xb376: 'Skein1024-176',\n  0xb377: 'Skein1024-184',\n  0xb378: 'Skein1024-192',\n  0xb379: 'Skein1024-200',\n  0xb37a: 'Skein1024-208',\n  0xb37b: 'Skein1024-216',\n  0xb37c: 'Skein1024-224',\n  0xb37d: 'Skein1024-232',\n  0xb37e: 'Skein1024-240',\n  0xb37f: 'Skein1024-248',\n  0xb380: 'Skein1024-256',\n  0xb381: 'Skein1024-264',\n  0xb382: 'Skein1024-272',\n  0xb383: 'Skein1024-280',\n  0xb384: 'Skein1024-288',\n  0xb385: 'Skein1024-296',\n  0xb386: 'Skein1024-304',\n  0xb387: 'Skein1024-312',\n  0xb388: 'Skein1024-320',\n  0xb389: 'Skein1024-328',\n  0xb38a: 'Skein1024-336',\n  0xb38b: 'Skein1024-344',\n  0xb38c: 'Skein1024-352',\n  0xb38d: 'Skein1024-360',\n  0xb38e: 'Skein1024-368',\n  0xb38f: 'Skein1024-376',\n  0xb390: 'Skein1024-384',\n  0xb391: 'Skein1024-392',\n  0xb392: 'Skein1024-400',\n  0xb393: 'Skein1024-408',\n  0xb394: 'Skein1024-416',\n  0xb395: 'Skein1024-424',\n  0xb396: 'Skein1024-432',\n  0xb397: 'Skein1024-440',\n  0xb398: 'Skein1024-448',\n  0xb399: 'Skein1024-456',\n  0xb39a: 'Skein1024-464',\n  0xb39b: 'Skein1024-472',\n  0xb39c: 'Skein1024-480',\n  0xb39d: 'Skein1024-488',\n  0xb39e: 'Skein1024-496',\n  0xb39f: 'Skein1024-504',\n  0xb3a0: 'Skein1024-512',\n  0xb3a1: 'Skein1024-520',\n  0xb3a2: 'Skein1024-528',\n  0xb3a3: 'Skein1024-536',\n  0xb3a4: 'Skein1024-544',\n  0xb3a5: 'Skein1024-552',\n  0xb3a6: 'Skein1024-560',\n  0xb3a7: 'Skein1024-568',\n  0xb3a8: 'Skein1024-576',\n  0xb3a9: 'Skein1024-584',\n  0xb3aa: 'Skein1024-592',\n  0xb3ab: 'Skein1024-600',\n  0xb3ac: 'Skein1024-608',\n  0xb3ad: 'Skein1024-616',\n  0xb3ae: 'Skein1024-624',\n  0xb3af: 'Skein1024-632',\n  0xb3b0: 'Skein1024-640',\n  0xb3b1: 'Skein1024-648',\n  0xb3b2: 'Skein1024-656',\n  0xb3b3: 'Skein1024-664',\n  0xb3b4: 'Skein1024-672',\n  0xb3b5: 'Skein1024-680',\n  0xb3b6: 'Skein1024-688',\n  0xb3b7: 'Skein1024-696',\n  0xb3b8: 'Skein1024-704',\n  0xb3b9: 'Skein1024-712',\n  0xb3ba: 'Skein1024-720',\n  0xb3bb: 'Skein1024-728',\n  0xb3bc: 'Skein1024-736',\n  0xb3bd: 'Skein1024-744',\n  0xb3be: 'Skein1024-752',\n  0xb3bf: 'Skein1024-760',\n  0xb3c0: 'Skein1024-768',\n  0xb3c1: 'Skein1024-776',\n  0xb3c2: 'Skein1024-784',\n  0xb3c3: 'Skein1024-792',\n  0xb3c4: 'Skein1024-800',\n  0xb3c5: 'Skein1024-808',\n  0xb3c6: 'Skein1024-816',\n  0xb3c7: 'Skein1024-824',\n  0xb3c8: 'Skein1024-832',\n  0xb3c9: 'Skein1024-840',\n  0xb3ca: 'Skein1024-848',\n  0xb3cb: 'Skein1024-856',\n  0xb3cc: 'Skein1024-864',\n  0xb3cd: 'Skein1024-872',\n  0xb3ce: 'Skein1024-880',\n  0xb3cf: 'Skein1024-888',\n  0xb3d0: 'Skein1024-896',\n  0xb3d1: 'Skein1024-904',\n  0xb3d2: 'Skein1024-912',\n  0xb3d3: 'Skein1024-920',\n  0xb3d4: 'Skein1024-928',\n  0xb3d5: 'Skein1024-936',\n  0xb3d6: 'Skein1024-944',\n  0xb3d7: 'Skein1024-952',\n  0xb3d8: 'Skein1024-960',\n  0xb3d9: 'Skein1024-968',\n  0xb3da: 'Skein1024-976',\n  0xb3db: 'Skein1024-984',\n  0xb3dc: 'Skein1024-992',\n  0xb3dd: 'Skein1024-1000',\n  0xb3de: 'Skein1024-1008',\n  0xb3df: 'Skein1024-1016',\n  0xb3e0: 'Skein1024-1024'\n})\n\nexports.defaultLengths = Object.freeze({\n  0x11: 20,\n  0x12: 32,\n  0x13: 64,\n  0x56: 32,\n  0x17: 28,\n  0x16: 32,\n  0x15: 48,\n  0x14: 64,\n  0x18: 32,\n  0x19: 64,\n  0x1A: 28,\n  0x1B: 32,\n  0x1C: 48,\n  0x1D: 64,\n  0x22: 32,\n\n  0xb201: 0x01,\n  0xb202: 0x02,\n  0xb203: 0x03,\n  0xb204: 0x04,\n  0xb205: 0x05,\n  0xb206: 0x06,\n  0xb207: 0x07,\n  0xb208: 0x08,\n  0xb209: 0x09,\n  0xb20a: 0x0a,\n  0xb20b: 0x0b,\n  0xb20c: 0x0c,\n  0xb20d: 0x0d,\n  0xb20e: 0x0e,\n  0xb20f: 0x0f,\n  0xb210: 0x10,\n  0xb211: 0x11,\n  0xb212: 0x12,\n  0xb213: 0x13,\n  0xb214: 0x14,\n  0xb215: 0x15,\n  0xb216: 0x16,\n  0xb217: 0x17,\n  0xb218: 0x18,\n  0xb219: 0x19,\n  0xb21a: 0x1a,\n  0xb21b: 0x1b,\n  0xb21c: 0x1c,\n  0xb21d: 0x1d,\n  0xb21e: 0x1e,\n  0xb21f: 0x1f,\n  0xb220: 0x20,\n  0xb221: 0x21,\n  0xb222: 0x22,\n  0xb223: 0x23,\n  0xb224: 0x24,\n  0xb225: 0x25,\n  0xb226: 0x26,\n  0xb227: 0x27,\n  0xb228: 0x28,\n  0xb229: 0x29,\n  0xb22a: 0x2a,\n  0xb22b: 0x2b,\n  0xb22c: 0x2c,\n  0xb22d: 0x2d,\n  0xb22e: 0x2e,\n  0xb22f: 0x2f,\n  0xb230: 0x30,\n  0xb231: 0x31,\n  0xb232: 0x32,\n  0xb233: 0x33,\n  0xb234: 0x34,\n  0xb235: 0x35,\n  0xb236: 0x36,\n  0xb237: 0x37,\n  0xb238: 0x38,\n  0xb239: 0x39,\n  0xb23a: 0x3a,\n  0xb23b: 0x3b,\n  0xb23c: 0x3c,\n  0xb23d: 0x3d,\n  0xb23e: 0x3e,\n  0xb23f: 0x3f,\n  0xb240: 0x40,\n  0xb241: 0x01,\n  0xb242: 0x02,\n  0xb243: 0x03,\n  0xb244: 0x04,\n  0xb245: 0x05,\n  0xb246: 0x06,\n  0xb247: 0x07,\n  0xb248: 0x08,\n  0xb249: 0x09,\n  0xb24a: 0x0a,\n  0xb24b: 0x0b,\n  0xb24c: 0x0c,\n  0xb24d: 0x0d,\n  0xb24e: 0x0e,\n  0xb24f: 0x0f,\n  0xb250: 0x10,\n  0xb251: 0x11,\n  0xb252: 0x12,\n  0xb253: 0x13,\n  0xb254: 0x14,\n  0xb255: 0x15,\n  0xb256: 0x16,\n  0xb257: 0x17,\n  0xb258: 0x18,\n  0xb259: 0x19,\n  0xb25a: 0x1a,\n  0xb25b: 0x1b,\n  0xb25c: 0x1c,\n  0xb25d: 0x1d,\n  0xb25e: 0x1e,\n  0xb25f: 0x1f,\n  0xb260: 0x20,\n  0xb301: 0x01,\n  0xb302: 0x02,\n  0xb303: 0x03,\n  0xb304: 0x04,\n  0xb305: 0x05,\n  0xb306: 0x06,\n  0xb307: 0x07,\n  0xb308: 0x08,\n  0xb309: 0x09,\n  0xb30a: 0x0a,\n  0xb30b: 0x0b,\n  0xb30c: 0x0c,\n  0xb30d: 0x0d,\n  0xb30e: 0x0e,\n  0xb30f: 0x0f,\n  0xb310: 0x10,\n  0xb311: 0x11,\n  0xb312: 0x12,\n  0xb313: 0x13,\n  0xb314: 0x14,\n  0xb315: 0x15,\n  0xb316: 0x16,\n  0xb317: 0x17,\n  0xb318: 0x18,\n  0xb319: 0x19,\n  0xb31a: 0x1a,\n  0xb31b: 0x1b,\n  0xb31c: 0x1c,\n  0xb31d: 0x1d,\n  0xb31e: 0x1e,\n  0xb31f: 0x1f,\n  0xb320: 0x20,\n  0xb321: 0x01,\n  0xb322: 0x02,\n  0xb323: 0x03,\n  0xb324: 0x04,\n  0xb325: 0x05,\n  0xb326: 0x06,\n  0xb327: 0x07,\n  0xb328: 0x08,\n  0xb329: 0x09,\n  0xb32a: 0x0a,\n  0xb32b: 0x0b,\n  0xb32c: 0x0c,\n  0xb32d: 0x0d,\n  0xb32e: 0x0e,\n  0xb32f: 0x0f,\n  0xb330: 0x10,\n  0xb331: 0x11,\n  0xb332: 0x12,\n  0xb333: 0x13,\n  0xb334: 0x14,\n  0xb335: 0x15,\n  0xb336: 0x16,\n  0xb337: 0x17,\n  0xb338: 0x18,\n  0xb339: 0x19,\n  0xb33a: 0x1a,\n  0xb33b: 0x1b,\n  0xb33c: 0x1c,\n  0xb33d: 0x1d,\n  0xb33e: 0x1e,\n  0xb33f: 0x1f,\n  0xb340: 0x20,\n  0xb341: 0x21,\n  0xb342: 0x22,\n  0xb343: 0x23,\n  0xb344: 0x24,\n  0xb345: 0x25,\n  0xb346: 0x26,\n  0xb347: 0x27,\n  0xb348: 0x28,\n  0xb349: 0x29,\n  0xb34a: 0x2a,\n  0xb34b: 0x2b,\n  0xb34c: 0x2c,\n  0xb34d: 0x2d,\n  0xb34e: 0x2e,\n  0xb34f: 0x2f,\n  0xb350: 0x30,\n  0xb351: 0x31,\n  0xb352: 0x32,\n  0xb353: 0x33,\n  0xb354: 0x34,\n  0xb355: 0x35,\n  0xb356: 0x36,\n  0xb357: 0x37,\n  0xb358: 0x38,\n  0xb359: 0x39,\n  0xb35a: 0x3a,\n  0xb35b: 0x3b,\n  0xb35c: 0x3c,\n  0xb35d: 0x3d,\n  0xb35e: 0x3e,\n  0xb35f: 0x3f,\n  0xb360: 0x40,\n  0xb361: 0x01,\n  0xb362: 0x02,\n  0xb363: 0x03,\n  0xb364: 0x04,\n  0xb365: 0x05,\n  0xb366: 0x06,\n  0xb367: 0x07,\n  0xb368: 0x08,\n  0xb369: 0x09,\n  0xb36a: 0x0a,\n  0xb36b: 0x0b,\n  0xb36c: 0x0c,\n  0xb36d: 0x0d,\n  0xb36e: 0x0e,\n  0xb36f: 0x0f,\n  0xb370: 0x10,\n  0xb371: 0x11,\n  0xb372: 0x12,\n  0xb373: 0x13,\n  0xb374: 0x14,\n  0xb375: 0x15,\n  0xb376: 0x16,\n  0xb377: 0x17,\n  0xb378: 0x18,\n  0xb379: 0x19,\n  0xb37a: 0x1a,\n  0xb37b: 0x1b,\n  0xb37c: 0x1c,\n  0xb37d: 0x1d,\n  0xb37e: 0x1e,\n  0xb37f: 0x1f,\n  0xb380: 0x20,\n  0xb381: 0x21,\n  0xb382: 0x22,\n  0xb383: 0x23,\n  0xb384: 0x24,\n  0xb385: 0x25,\n  0xb386: 0x26,\n  0xb387: 0x27,\n  0xb388: 0x28,\n  0xb389: 0x29,\n  0xb38a: 0x2a,\n  0xb38b: 0x2b,\n  0xb38c: 0x2c,\n  0xb38d: 0x2d,\n  0xb38e: 0x2e,\n  0xb38f: 0x2f,\n  0xb390: 0x30,\n  0xb391: 0x31,\n  0xb392: 0x32,\n  0xb393: 0x33,\n  0xb394: 0x34,\n  0xb395: 0x35,\n  0xb396: 0x36,\n  0xb397: 0x37,\n  0xb398: 0x38,\n  0xb399: 0x39,\n  0xb39a: 0x3a,\n  0xb39b: 0x3b,\n  0xb39c: 0x3c,\n  0xb39d: 0x3d,\n  0xb39e: 0x3e,\n  0xb39f: 0x3f,\n  0xb3a0: 0x40,\n  0xb3a1: 0x41,\n  0xb3a2: 0x42,\n  0xb3a3: 0x43,\n  0xb3a4: 0x44,\n  0xb3a5: 0x45,\n  0xb3a6: 0x46,\n  0xb3a7: 0x47,\n  0xb3a8: 0x48,\n  0xb3a9: 0x49,\n  0xb3aa: 0x4a,\n  0xb3ab: 0x4b,\n  0xb3ac: 0x4c,\n  0xb3ad: 0x4d,\n  0xb3ae: 0x4e,\n  0xb3af: 0x4f,\n  0xb3b0: 0x50,\n  0xb3b1: 0x51,\n  0xb3b2: 0x52,\n  0xb3b3: 0x53,\n  0xb3b4: 0x54,\n  0xb3b5: 0x55,\n  0xb3b6: 0x56,\n  0xb3b7: 0x57,\n  0xb3b8: 0x58,\n  0xb3b9: 0x59,\n  0xb3ba: 0x5a,\n  0xb3bb: 0x5b,\n  0xb3bc: 0x5c,\n  0xb3bd: 0x5d,\n  0xb3be: 0x5e,\n  0xb3bf: 0x5f,\n  0xb3c0: 0x60,\n  0xb3c1: 0x61,\n  0xb3c2: 0x62,\n  0xb3c3: 0x63,\n  0xb3c4: 0x64,\n  0xb3c5: 0x65,\n  0xb3c6: 0x66,\n  0xb3c7: 0x67,\n  0xb3c8: 0x68,\n  0xb3c9: 0x69,\n  0xb3ca: 0x6a,\n  0xb3cb: 0x6b,\n  0xb3cc: 0x6c,\n  0xb3cd: 0x6d,\n  0xb3ce: 0x6e,\n  0xb3cf: 0x6f,\n  0xb3d0: 0x70,\n  0xb3d1: 0x71,\n  0xb3d2: 0x72,\n  0xb3d3: 0x73,\n  0xb3d4: 0x74,\n  0xb3d5: 0x75,\n  0xb3d6: 0x76,\n  0xb3d7: 0x77,\n  0xb3d8: 0x78,\n  0xb3d9: 0x79,\n  0xb3da: 0x7a,\n  0xb3db: 0x7b,\n  0xb3dc: 0x7c,\n  0xb3dd: 0x7d,\n  0xb3de: 0x7e,\n  0xb3df: 0x7f,\n  0xb3e0: 0x80\n})\n","'use strict'\n\nmodule.exports = function pull (a) {\n  var length = arguments.length\n  if (typeof a === 'function' && a.length === 1) {\n    var args = new Array(length)\n    for(var i = 0; i < length; i++)\n      args[i] = arguments[i]\n    return function (read) {\n      if (args == null) {\n        throw new TypeError(\"partial sink should only be called once!\")\n      }\n\n      // Grab the reference after the check, because it's always an array now\n      // (engines like that kind of consistency).\n      var ref = args\n      args = null\n\n      // Prioritize common case of small number of pulls.\n      switch (length) {\n      case 1: return pull(read, ref[0])\n      case 2: return pull(read, ref[0], ref[1])\n      case 3: return pull(read, ref[0], ref[1], ref[2])\n      case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])\n      default:\n        ref.unshift(read)\n        return pull.apply(null, ref)\n      }\n    }\n  }\n\n  var read = a\n\n  if (read && typeof read.source === 'function') {\n    read = read.source\n  }\n\n  for (var i = 1; i < length; i++) {\n    var s = arguments[i]\n    if (typeof s === 'function') {\n      read = s(read)\n    } else if (s && typeof s === 'object') {\n      s.sink(read)\n      read = s.source\n    }\n  }\n\n  return read\n}\n","module.exports = require('./lib/murmurHash3js');\n","'use strict'\n\nexports.toCallback = (doWork) => {\n  return function (input, callback) {\n    let res\n    try {\n      res = doWork(input)\n    } catch (err) {\n      process.nextTick(callback, err)\n      return\n    }\n\n    process.nextTick(callback, null, res)\n  }\n}\n\nexports.toBuf = (doWork, other) => (input) => {\n  let result = doWork(input, other)\n  return Buffer.from(result, 'hex')\n}\n\nexports.fromString = (doWork, other) => (_input) => {\n  const input = Buffer.isBuffer(_input) ? _input.toString() : _input\n  return doWork(input, other)\n}\n\nexports.fromNumberTo32BitBuf = (doWork, other) => (input) => {\n  let number = doWork(input, other)\n  const bytes = new Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return Buffer.from(bytes)\n}\n","var Promise = require('promise');\nvar isPromise = require('is-promise');\n\nvar nextTick;\nif (typeof setImmediate === 'function') nextTick = setImmediate\nelse if (typeof process === 'object' && process && process.nextTick) nextTick = process.nextTick\nelse nextTick = function (cb) { setTimeout(cb, 0) }\n\nmodule.exports = nodeify;\nfunction nodeify(promise, cb) {\n  if (typeof cb !== 'function') return promise;\n  return promise\n    .then(function (res) {\n      nextTick(function () {\n        cb(null, res);\n      });\n    }, function (err) {\n      nextTick(function () {\n        cb(err);\n      });\n    });\n}\nfunction nodeifyThis(cb) {\n  return nodeify(this, cb);\n}\n\nnodeify.extend = extend;\nnodeify.Promise = NodeifyPromise;\n\nfunction extend(prom) {\n  if (prom && isPromise(prom)) {\n    prom.nodeify = nodeifyThis;\n    var then = prom.then;\n    prom.then = function () {\n      return extend(then.apply(this, arguments));\n    };\n    return prom;\n  } else if (typeof prom === 'function') {\n    prom.prototype.nodeify = nodeifyThis;\n  } else {\n    Promise.prototype.nodeify = nodeifyThis;\n  }\n}\n\nfunction NodeifyPromise(fn) {\n  if (!(this instanceof NodeifyPromise)) {\n    return new NodeifyPromise(fn);\n  }\n  Promise.call(this, fn);\n  extend(this);\n}\n\nNodeifyPromise.prototype = Object.create(Promise.prototype);\nNodeifyPromise.prototype.constructor = NodeifyPromise;","module.exports = isPromise;\r\n\r\nfunction isPromise(obj) {\r\n  return obj && typeof obj.then === 'function';\r\n}","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","module.exports = Node\n\n/**\n * a linked-list node\n * @class\n * @param {any} value - node's value\n * @param {Node} next - next node\n */\nfunction Node (value, next) {\n  this.value = value\n  this.next = next\n}\n\n/**\n * checks if this node or any of its children has the value\n * @param {any} value - value to check if linked-list contains\n * @return {boolean} true if the list contains the value; false if not\n */\nNode.prototype.contains = function (value) {\n  var cursor = this\n\n  while (cursor) {\n    if (cursor.value === value) return true\n    cursor = cursor.next\n  }\n\n  return false\n}\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n\nconst Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function base (ALPHABET) {\n  if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long')\n\n  const BASE_MAP = new Uint8Array(256)\n  BASE_MAP.fill(255)\n\n  for (let i = 0; i < ALPHABET.length; i++) {\n    const x = ALPHABET.charAt(i)\n    const xc = x.charCodeAt(0)\n\n    if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous')\n    BASE_MAP[xc] = i\n  }\n\n  const BASE = ALPHABET.length\n  const LEADER = ALPHABET.charAt(0)\n  const FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  const iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n\n  function encode (source) {\n    if (!Buffer.isBuffer(source)) throw new TypeError('Expected Buffer')\n    if (source.length === 0) return ''\n\n    // Skip & count leading zeroes.\n    let zeroes = 0\n    let length = 0\n    let pbegin = 0\n    const pend = source.length\n\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n\n    // Allocate enough space in big-endian base58 representation.\n    const size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    const b58 = new Uint8Array(size)\n\n    // Process the bytes.\n    while (pbegin !== pend) {\n      let carry = source[pbegin]\n\n      // Apply \"b58 = b58 * 256 + ch\".\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (256 * b58[it]) >>> 0\n        b58[it] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      pbegin++\n    }\n\n    // Skip leading zeroes in base58 result.\n    let it = size - length\n    while (it !== size && b58[it] === 0) {\n      it++\n    }\n\n    // Translate the result into a string.\n    let str = LEADER.repeat(zeroes)\n    for (; it < size; ++it) str += ALPHABET.charAt(b58[it])\n\n    return str\n  }\n\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') throw new TypeError('Expected String')\n    if (source.length === 0) return Buffer.alloc(0)\n\n    let psz = 0\n\n    // Skip leading spaces.\n    if (source[psz] === ' ') return\n\n    // Skip and count leading '1's.\n    let zeroes = 0\n    let length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n\n    // Allocate enough space in big-endian base256 representation.\n    const size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    const b256 = new Uint8Array(size)\n\n    // Process the characters.\n    while (source[psz]) {\n      // Decode character\n      let carry = BASE_MAP[source.charCodeAt(psz)]\n\n      // Invalid character\n      if (carry === 255) return\n\n      let i = 0\n      for (let it = size - 1; (carry !== 0 || i < length) && (it !== -1); it--, i++) {\n        carry += (BASE * b256[it]) >>> 0\n        b256[it] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n\n      if (carry !== 0) throw new Error('Non-zero carry')\n      length = i\n      psz++\n    }\n\n    // Skip trailing spaces.\n    if (source[psz] === ' ') return\n\n    // Skip leading zeroes in b256.\n    let it = size - length\n    while (it !== size && b256[it] === 0) {\n      it++\n    }\n\n    const vch = Buffer.allocUnsafe(zeroes + (size - it))\n    vch.fill(0x00, 0, zeroes)\n\n    let j = zeroes\n    while (it !== size) {\n      vch[j++] = b256[it++]\n    }\n\n    return vch\n  }\n\n  function decode (string) {\n    const buffer = decodeUnsafe(string)\n    if (buffer) return buffer\n\n    throw new Error('Non-base' + BASE + ' character')\n  }\n\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\n","'use strict'\nvar toString = Object.prototype.toString\n\n// TypeError\nexports.isArray = function (value, message) {\n  if (!Array.isArray(value)) throw TypeError(message)\n}\n\nexports.isBoolean = function (value, message) {\n  if (toString.call(value) !== '[object Boolean]') throw TypeError(message)\n}\n\nexports.isBuffer = function (value, message) {\n  if (!Buffer.isBuffer(value)) throw TypeError(message)\n}\n\nexports.isFunction = function (value, message) {\n  if (toString.call(value) !== '[object Function]') throw TypeError(message)\n}\n\nexports.isNumber = function (value, message) {\n  if (toString.call(value) !== '[object Number]') throw TypeError(message)\n}\n\nexports.isObject = function (value, message) {\n  if (toString.call(value) !== '[object Object]') throw TypeError(message)\n}\n\n// RangeError\nexports.isBufferLength = function (buffer, length, message) {\n  if (buffer.length !== length) throw RangeError(message)\n}\n\nexports.isBufferLength2 = function (buffer, length1, length2, message) {\n  if (buffer.length !== length1 && buffer.length !== length2) throw RangeError(message)\n}\n\nexports.isLengthGTZero = function (value, message) {\n  if (value.length === 0) throw RangeError(message)\n}\n\nexports.isNumberInInterval = function (number, x, y, message) {\n  if (number <= x || number >= y) throw RangeError(message)\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar bip66 = require('bip66')\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x21, 0x02, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([\n  // begin\n  0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20,\n  // private key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  // middle\n  0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48,\n  0xcE, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xfE, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04,\n  0x41, 0x04, 0x79, 0xbE, 0x66, 0x7E, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xcE, 0x87,\n  0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xcE, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8,\n  0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0E, 0x11,\n  0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10,\n  0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n  0xff, 0xff, 0xff, 0xff, 0xfE, 0xba, 0xaE, 0xdc, 0xE6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5E,\n  0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00,\n  // public key\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  0x00\n])\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED)\n  privateKey.copy(result, compressed ? 8 : 9)\n  publicKey.copy(result, compressed ? 181 : 214)\n  return result\n}\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length\n\n  // sequence header\n  var index = 0\n  if (length < index + 1 || privateKey[index] !== 0x30) return\n  index += 1\n\n  // sequence length constructor\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return\n\n  var lenb = privateKey[index] & 0x7f\n  index += 1\n  if (lenb < 1 || lenb > 2) return\n  if (length < index + lenb) return\n\n  // sequence length\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0)\n  index += lenb\n  if (length < index + len) return\n\n  // sequence element 0: version number (=1)\n  if (length < index + 3 ||\n      privateKey[index] !== 0x02 ||\n      privateKey[index + 1] !== 0x01 ||\n      privateKey[index + 2] !== 0x01) {\n    return\n  }\n  index += 3\n\n  // sequence element 1: octet string, up to 32 bytes\n  if (length < index + 2 ||\n      privateKey[index] !== 0x04 ||\n      privateKey[index + 1] > 0x20 ||\n      length < index + 2 + privateKey[index + 1]) {\n    return\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1])\n}\n\nexports.signatureExport = function (sigObj) {\n  var r = Buffer.concat([Buffer.from([0]), sigObj.r])\n  for (var lenR = 33, posR = 0; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n  var s = Buffer.concat([Buffer.from([0]), sigObj.s])\n  for (var lenS = 33, posS = 0; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n  return bip66.encode(r.slice(posR), s.slice(posS))\n}\n\nexports.signatureImport = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  try {\n    var sigObj = bip66.decode(sig)\n    if (sigObj.r.length === 33 && sigObj.r[0] === 0x00) sigObj.r = sigObj.r.slice(1)\n    if (sigObj.r.length > 32) throw new Error('R length is too long')\n    if (sigObj.s.length === 33 && sigObj.s[0] === 0x00) sigObj.s = sigObj.s.slice(1)\n    if (sigObj.s.length > 32) throw new Error('S length is too long')\n  } catch (err) {\n    return\n  }\n\n  sigObj.r.copy(r, 32 - sigObj.r.length)\n  sigObj.s.copy(s, 32 - sigObj.s.length)\n\n  return { r: r, s: s }\n}\n\nexports.signatureImportLax = function (sig) {\n  var r = Buffer.alloc(32, 0)\n  var s = Buffer.alloc(32, 0)\n\n  var length = sig.length\n  var index = 0\n\n  // sequence tag byte\n  if (sig[index++] !== 0x30) return\n\n  // sequence length byte\n  var lenbyte = sig[index++]\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80\n    if (index > length) return\n  }\n\n  // sequence tag byte for r\n  if (sig[index++] !== 0x02) return\n\n  // length for r\n  var rlen = sig[index++]\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) rlen = (rlen << 8) + sig[index]\n  }\n  if (rlen > length - index) return\n  var rindex = index\n  index += rlen\n\n  // sequence tag byte for s\n  if (sig[index++] !== 0x02) return\n\n  // length for s\n  var slen = sig[index++]\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80\n    if (index + lenbyte > length) return\n    for (; lenbyte > 0 && sig[index] === 0x00; index += 1, lenbyte -= 1);\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) slen = (slen << 8) + sig[index]\n  }\n  if (slen > length - index) return\n  var sindex = index\n  index += slen\n\n  // ignore leading zeros in r\n  for (; rlen > 0 && sig[rindex] === 0x00; rlen -= 1, rindex += 1);\n  // copy r value\n  if (rlen > 32) return\n  var rvalue = sig.slice(rindex, rindex + rlen)\n  rvalue.copy(r, 32 - rvalue.length)\n\n  // ignore leading zeros in s\n  for (; slen > 0 && sig[sindex] === 0x00; slen -= 1, sindex += 1);\n  // copy s value\n  if (slen > 32) return\n  var svalue = sig.slice(sindex, sindex + slen)\n  svalue.copy(s, 32 - svalue.length)\n\n  return { r: r, s: s }\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (fn) {\n    return function () /*...args, callback*/{\n        var args = (0, _slice2.default)(arguments);\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    };\n};\n\nvar _slice = require('./slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];","'use strict'\n\nconst sha3 = require('js-sha3')\nconst murmur3 = require('murmurhash3js')\n\nconst utils = require('./utils')\nconst sha = require('./crypto-sha1-2')\n\nconst toCallback = utils.toCallback\nconst toBuf = utils.toBuf\nconst fromString = utils.fromString\nconst fromNumberTo32BitBuf = utils.fromNumberTo32BitBuf\n\nconst dblSha2256 = (buf, cb) => {\n  sha.sha2256(buf, (err, firstHash) => {\n    if (err) {\n      cb(err)\n    }\n    sha.sha2256((Buffer.from(firstHash)), cb)\n  })\n}\n\nmodule.exports = {\n  sha1: sha.sha1,\n  sha2256: sha.sha2256,\n  sha2512: sha.sha2512,\n  sha3512: toCallback(toBuf(sha3.sha3_512)),\n  sha3384: toCallback(toBuf(sha3.sha3_384)),\n  sha3256: toCallback(toBuf(sha3.sha3_256)),\n  sha3224: toCallback(toBuf(sha3.sha3_224)),\n  shake128: toCallback(toBuf(sha3.shake_128, 128)),\n  shake256: toCallback(toBuf(sha3.shake_256, 256)),\n  keccak224: toCallback(toBuf(sha3.keccak_224)),\n  keccak256: toCallback(toBuf(sha3.keccak_256)),\n  keccak384: toCallback(toBuf(sha3.keccak_384)),\n  keccak512: toCallback(toBuf(sha3.keccak_512)),\n  murmur3128: toCallback(toBuf(fromString(murmur3.x64.hash128))),\n  murmur332: toCallback(fromNumberTo32BitBuf(fromString(murmur3.x86.hash32))),\n  addBlake: require('./blake'),\n  dblSha2256: dblSha2256\n}\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.1',\n        'x86': {},\n        'x64': {}\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (key, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n\n        key = key || '';\n        seed = seed || 0;\n\n        var remainder = key.length % 4;\n        var bytes = key.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < bytes; i = i + 4) {\n            k1 = ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= (key.charCodeAt(i + 2) & 0xff) << 16;\n\n            case 2:\n                k1 ^= (key.charCodeAt(i + 1) & 0xff) << 8;\n\n            case 1:\n                k1 ^= (key.charCodeAt(i) & 0xff);\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= key.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (key, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n\n        key = key || '';\n        seed = seed || 0;\n\n        var remainder = key.length % 16;\n        var bytes = key.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < bytes; i = i + 16) {\n            k1 = ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) & 0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24);\n            k2 = ((key.charCodeAt(i + 4) & 0xff)) | ((key.charCodeAt(i + 5) & 0xff) << 8) | ((key.charCodeAt(i + 6) & 0xff) << 16) | ((key.charCodeAt(i + 7) & 0xff) << 24);\n            k3 = ((key.charCodeAt(i + 8) & 0xff)) | ((key.charCodeAt(i + 9) & 0xff) << 8) | ((key.charCodeAt(i + 10) & 0xff) << 16) | ((key.charCodeAt(i + 11) & 0xff) << 24);\n            k4 = ((key.charCodeAt(i + 12) & 0xff)) | ((key.charCodeAt(i + 13) & 0xff) << 8) | ((key.charCodeAt(i + 14) & 0xff) << 16) | ((key.charCodeAt(i + 15) & 0xff) << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= key.charCodeAt(i + 14) << 16;\n\n            case 14:\n                k4 ^= key.charCodeAt(i + 13) << 8;\n\n            case 13:\n                k4 ^= key.charCodeAt(i + 12);\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= key.charCodeAt(i + 11) << 24;\n\n            case 11:\n                k3 ^= key.charCodeAt(i + 10) << 16;\n\n            case 10:\n                k3 ^= key.charCodeAt(i + 9) << 8;\n\n            case 9:\n                k3 ^= key.charCodeAt(i + 8);\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= key.charCodeAt(i + 7) << 24;\n\n            case 7:\n                k2 ^= key.charCodeAt(i + 6) << 16;\n\n            case 6:\n                k2 ^= key.charCodeAt(i + 5) << 8;\n\n            case 5:\n                k2 ^= key.charCodeAt(i + 4);\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= key.charCodeAt(i + 3) << 24;\n\n            case 3:\n                k1 ^= key.charCodeAt(i + 2) << 16;\n\n            case 2:\n                k1 ^= key.charCodeAt(i + 1) << 8;\n\n            case 1:\n                k1 ^= key.charCodeAt(i);\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= key.length;\n        h2 ^= key.length;\n        h3 ^= key.length;\n        h4 ^= key.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (key, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n\n        key = key || '';\n        seed = seed || 0;\n\n        var remainder = key.length % 16;\n        var bytes = key.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < bytes; i = i + 16) {\n            k1 = [((key.charCodeAt(i + 4) & 0xff)) | ((key.charCodeAt(i + 5) & 0xff) << 8) | ((key.charCodeAt(i + 6) & 0xff) << 16) | ((key.charCodeAt(i + 7) & 0xff) << 24), ((key.charCodeAt(i) & 0xff)) | ((key.charCodeAt(i + 1) &\n                0xff) << 8) | ((key.charCodeAt(i + 2) & 0xff) << 16) | ((key.charCodeAt(i + 3) & 0xff) << 24)];\n            k2 = [((key.charCodeAt(i + 12) & 0xff)) | ((key.charCodeAt(i + 13) & 0xff) << 8) | ((key.charCodeAt(i + 14) & 0xff) << 16) | ((key.charCodeAt(i + 15) & 0xff) << 24), ((key.charCodeAt(i + 8) & 0xff)) | ((key.charCodeAt(i +\n                9) & 0xff) << 8) | ((key.charCodeAt(i + 10) & 0xff) << 16) | ((key.charCodeAt(i + 11) & 0xff) << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 14)], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 13)], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 12)], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 11)], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 10)], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, key.charCodeAt(i + 9)], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, key.charCodeAt(i + 8)]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 7)], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 6)], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 5)], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 4)], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 3)], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 2)], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, key.charCodeAt(i + 1)], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, key.charCodeAt(i)]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, key.length]);\n        h2 = _x64Xor(h2, [0, key.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","/* global self */\n\n'use strict'\n\nconst nodeify = require('nodeify')\n\nconst webCrypto = getWebCrypto()\n\nfunction getWebCrypto () {\n  if (self.crypto) {\n    return self.crypto.subtle || self.crypto.webkitSubtle\n  }\n\n  if (self.msCrypto) {\n    return self.msCrypto.subtle\n  }\n}\n\nfunction webCryptoHash (type) {\n  if (!webCrypto) {\n    throw new Error('Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context')\n  }\n\n  return (data, callback) => {\n    const res = webCrypto.digest({ name: type }, data)\n\n    if (typeof res.then !== 'function') { // IE11\n      res.onerror = () => {\n        callback(new Error(`hashing data using ${type}`))\n      }\n      res.oncomplete = (e) => {\n        callback(null, e.target.result)\n      }\n      return\n    }\n\n    nodeify(\n      res.then((raw) => Buffer.from(new Uint8Array(raw))),\n      callback\n    )\n  }\n}\n\nfunction sha1 (buf, callback) {\n  webCryptoHash('SHA-1')(buf, callback)\n}\n\nfunction sha2256 (buf, callback) {\n  webCryptoHash('SHA-256')(buf, callback)\n}\n\nfunction sha2512 (buf, callback) {\n  webCryptoHash('SHA-512')(buf, callback)\n}\n\nmodule.exports = {\n  sha1: sha1,\n  sha2256: sha2256,\n  sha2512: sha2512\n}\n","var isPromise = require('is-promise')\r\n\r\nvar nextTick;\r\nif (typeof setImediate === 'function') nextTick = setImediate\r\nelse if (typeof process === 'object' && process && process.nextTick) nextTick = process.nextTick\r\nelse nextTick = function (cb) { setTimeout(cb, 0) }\r\n\r\nvar extensions = [];\r\n\r\nmodule.exports = Promise\r\nfunction Promise(fn) {\r\n  if (!(this instanceof Promise)) {\r\n    return typeof fn === 'function' ? new Promise(fn) : defer()\r\n  }\r\n  var isResolved = false\r\n  var isFulfilled = false\r\n  var value\r\n  var waiting = []\r\n  var running = false\r\n\r\n  function next(skipTimeout) {\r\n    if (waiting.length) {\r\n      running = true\r\n      waiting.shift()(skipTimeout || false)\r\n    } else {\r\n      running = false\r\n    }\r\n  }\r\n  this.then = then;\r\n  function then(cb, eb) {\r\n    return new Promise(function (resolver) {\r\n      function done(skipTimeout) {\r\n        var callback = isFulfilled ? cb : eb\r\n        if (typeof callback === 'function') {\r\n          function timeoutDone() {\r\n            var val;\r\n            try {\r\n              val = callback(value)\r\n            } catch (ex) {\r\n              resolver.reject(ex)\r\n              return next()\r\n            }\r\n            resolver.fulfill(val);\r\n            next(true);\r\n          }\r\n          if (skipTimeout) timeoutDone()\r\n          else nextTick(timeoutDone)\r\n        } else if (isFulfilled) {\r\n          resolver.fulfill(value)\r\n          next(skipTimeout)\r\n        } else {\r\n          resolver.reject(value)\r\n          next(skipTimeout)\r\n        }\r\n      }\r\n      waiting.push(done)\r\n      if (isResolved && !running) next()\r\n    });\r\n  }\r\n  \r\n  (function () {\r\n    function fulfill(val) {\r\n      if (isResolved) return\r\n      if (isPromise(val)) val.then(fulfill, reject)\r\n      else {\r\n        isResolved = isFulfilled = true\r\n        value = val\r\n        next()\r\n      }\r\n    }\r\n    function reject(err) {\r\n      if (isResolved) return\r\n      isResolved = true\r\n      isFulfilled = false\r\n      value = err\r\n      next()\r\n    }\r\n    var resolver = {fulfill: fulfill, reject: reject};\r\n    for (var i = 0; i < extensions.length; i++) {\r\n      extensions[i](this, resolver);\r\n    }\r\n    if (typeof fn === 'function') {\r\n      try {\r\n        fn(resolver)\r\n      } catch (ex) {\r\n        resolver.reject(ex);\r\n      }\r\n    }\r\n  }());\r\n}\r\nfunction defer() {\r\n  var resolver\r\n  var promise = new Promise(function (res) { resolver = res })\r\n  return {resolver: resolver, promise: promise}\r\n}\r\nPromise.use = function (extension) {\r\n  extensions.push(extension);\r\n};","'use strict'\n\nconst blake = require('blakejs')\n\nconst toCallback = require('./utils').toCallback\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\nconst makeB2Hash = (size, hf) => toCallback((buf) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, buf)\n  return Buffer.from(hf.digest(ctx))\n})\n\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst bs58 = require('bs58')\n\nconst cs = require('./constants')\n\nexports.names = cs.names\nexports.codes = cs.codes\nexports.defaultLengths = cs.defaultLengths\n\nconst varint = require('varint')\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toHexString = function toHexString (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return hash.toString('hex')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Buffer}\n */\nexports.fromHexString = function fromHexString (hash) {\n  return Buffer.from(hash, 'hex')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toB58String = function toB58String (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return bs58.encode(hash)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Buffer} hash\n * @returns {Buffer}\n */\nexports.fromB58String = function fromB58String (hash) {\n  let encoded = hash\n  if (Buffer.isBuffer(hash)) {\n    encoded = hash.toString()\n  }\n\n  return Buffer.from(bs58.decode(encoded))\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Buffer} buf\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\n */\nexports.decode = function decode (buf) {\n  if (!(Buffer.isBuffer(buf))) {\n    throw new Error('multihash must be a Buffer')\n  }\n\n  if (buf.length < 3) {\n    throw new Error('multihash too short. must be > 3 bytes.')\n  }\n\n  let code = varint.decode(buf)\n  if (!exports.isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  let len = varint.decode(buf)\n  if (len < 1) {\n    throw new Error(`multihash invalid length: 0x${len.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\n  }\n\n  return {\n    code: code,\n    name: cs.codes[code],\n    length: len,\n    digest: buf\n  }\n}\n\n/**\n *  Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Buffer} digest\n * @param {string|number} code\n * @param {number} [length]\n * @returns {Buffer}\n */\nexports.encode = function encode (digest, code, length) {\n  if (!digest || !code) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = exports.coerceCode(code)\n\n  if (!(Buffer.isBuffer(digest))) {\n    throw new Error('digest should be a Buffer')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  return Buffer.concat([\n    Buffer.from(varint.encode(hashfn)),\n    Buffer.from(varint.encode(length)),\n    digest\n  ])\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n * @param {string|number} name\n * @returns {number}\n */\nexports.coerceCode = function coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (!cs.names[name]) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = cs.names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  if (!cs.codes[code] && !exports.isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks wether a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isAppCode = function appCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isValidCode = function validCode (code) {\n  if (exports.isAppCode(code)) {\n    return true\n  }\n\n  if (cs.codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  exports.decode(multihash) // throws if bad.\n}\nexports.validate = validate\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nexports.prefix = function prefix (multihash) {\n  validate(multihash)\n\n  return multihash.slice(0, 2)\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isAsync = undefined;\n\nvar _asyncify = require('../asyncify');\n\nvar _asyncify2 = _interopRequireDefault(_asyncify);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar supportsSymbol = typeof Symbol === 'function';\n\nfunction isAsync(fn) {\n    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction wrapAsync(asyncFn) {\n    return isAsync(asyncFn) ? (0, _asyncify2.default)(asyncFn) : asyncFn;\n}\n\nexports.default = wrapAsync;\nexports.isAsync = isAsync;","'use strict'\n\nconst multihash = require('multihashes')\nconst crypto = require('./crypto')\n\nmodule.exports = Multihashing\n\n/**\n * Hash the given `buf` using the algorithm specified\n * by `func`.\n *\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nfunction Multihashing (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  Multihashing.digest(buf, func, length, (err, digest) => {\n    if (err) {\n      return callback(err)\n    }\n\n    callback(null, multihash.encode(digest, func, length))\n  })\n}\n\n/**\n * The `buffer` module for easy use in the browser.\n *\n * @type {Buffer}\n */\nMultihashing.Buffer = Buffer // for browser things\n\n/**\n * Expose multihash itself, to avoid silly double requires.\n */\nMultihashing.multihash = multihash\n\n/**\n * @param {Buffer} buf - The value to hash.\n * @param {number|string} func - The algorithm to use.\n * @param {number} [length] - Optionally trim the result to this length.\n * @param {function(Error, Buffer)} callback\n * @returns {undefined}\n */\nMultihashing.digest = function (buf, func, length, callback) {\n  if (typeof length === 'function') {\n    callback = length\n    length = undefined\n  }\n\n  if (!callback) {\n    throw new Error('Missing callback')\n  }\n\n  let cb = callback\n  if (length) {\n    cb = (err, digest) => {\n      if (err) {\n        return callback(err)\n      }\n\n      callback(null, digest.slice(0, length))\n    }\n  }\n\n  let hash\n  try {\n    hash = Multihashing.createHash(func)\n  } catch (err) {\n    return cb(err)\n  }\n\n  hash(buf, cb)\n}\n\n/**\n * @param {string|number} func\n *\n * @returns {function} - The to `func` corresponding hash function.\n */\nMultihashing.createHash = function (func) {\n  func = multihash.coerceCode(func)\n  if (!Multihashing.functions[func]) {\n    throw new Error('multihash function ' + func + ' not yet supported')\n  }\n\n  return Multihashing.functions[func]\n}\n\n/**\n * Mapping of multihash codes to their hashing functions.\n * @type {Object}\n */\nMultihashing.functions = {\n  // sha1\n  0x11: crypto.sha1,\n  // sha2-256\n  0x12: crypto.sha2256,\n  // sha2-512\n  0x13: crypto.sha2512,\n  // sha3-512\n  0x14: crypto.sha3512,\n  // sha3-384\n  0x15: crypto.sha3384,\n  // sha3-256\n  0x16: crypto.sha3256,\n  // sha3-224\n  0x17: crypto.sha3224,\n  // shake-128\n  0x18: crypto.shake128,\n  // shake-256\n  0x19: crypto.shake256,\n  // keccak-224\n  0x1A: crypto.keccak224,\n  // keccak-256\n  0x1B: crypto.keccak256,\n  // keccak-384\n  0x1C: crypto.keccak384,\n  // keccak-512\n  0x1D: crypto.keccak512,\n  // murmur3-128\n  0x22: crypto.murmur3128,\n  // murmur3-32\n  0x23: crypto.murmur332,\n  // dbl-sha2-256\n  0x56: crypto.dblSha2256\n}\n\n// add blake functions\ncrypto.addBlake(Multihashing.functions)\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.8.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2018\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var INPUT_ERROR = 'input is invalid type';\n  var FINALIZE_ERROR = 'finalize already called';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      throw new Error(FINALIZE_ERROR);\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw new Error(INPUT_ERROR);\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw new Error(INPUT_ERROR);\n          }\n        }\n      } else {\n        throw new Error(INPUT_ERROR);\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","'use strict';\n\nfunction createError(err, code, props) {\n    var key;\n\n    if (!(err instanceof Error)) {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n    } else if (code != null) {\n        err.code = code;\n    }\n\n    if (props) {\n        for (key in props) {\n            err[key] = props[key];\n        }\n    }\n\n    return err;\n}\n\nmodule.exports = createError;\n","// Reference https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki\n// Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n// NOTE: SIGHASH byte ignored AND restricted, truncate before use\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction check (buffer) {\n  if (buffer.length < 8) return false\n  if (buffer.length > 72) return false\n  if (buffer[0] !== 0x30) return false\n  if (buffer[1] !== buffer.length - 2) return false\n  if (buffer[2] !== 0x02) return false\n\n  var lenR = buffer[3]\n  if (lenR === 0) return false\n  if (5 + lenR >= buffer.length) return false\n  if (buffer[4 + lenR] !== 0x02) return false\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) return false\n  if ((6 + lenR + lenS) !== buffer.length) return false\n\n  if (buffer[4] & 0x80) return false\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) return false\n\n  if (buffer[lenR + 6] & 0x80) return false\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) return false\n  return true\n}\n\nfunction decode (buffer) {\n  if (buffer.length < 8) throw new Error('DER sequence length is too short')\n  if (buffer.length > 72) throw new Error('DER sequence length is too long')\n  if (buffer[0] !== 0x30) throw new Error('Expected DER sequence')\n  if (buffer[1] !== buffer.length - 2) throw new Error('DER sequence length is invalid')\n  if (buffer[2] !== 0x02) throw new Error('Expected DER integer')\n\n  var lenR = buffer[3]\n  if (lenR === 0) throw new Error('R length is zero')\n  if (5 + lenR >= buffer.length) throw new Error('R length is too long')\n  if (buffer[4 + lenR] !== 0x02) throw new Error('Expected DER integer (2)')\n\n  var lenS = buffer[5 + lenR]\n  if (lenS === 0) throw new Error('S length is zero')\n  if ((6 + lenR + lenS) !== buffer.length) throw new Error('S length is invalid')\n\n  if (buffer[4] & 0x80) throw new Error('R value is negative')\n  if (lenR > 1 && (buffer[4] === 0x00) && !(buffer[5] & 0x80)) throw new Error('R value excessively padded')\n\n  if (buffer[lenR + 6] & 0x80) throw new Error('S value is negative')\n  if (lenS > 1 && (buffer[lenR + 6] === 0x00) && !(buffer[lenR + 7] & 0x80)) throw new Error('S value excessively padded')\n\n  // non-BIP66 - extract R, S values\n  return {\n    r: buffer.slice(4, 4 + lenR),\n    s: buffer.slice(6 + lenR)\n  }\n}\n\n/*\n * Expects r and s to be positive DER integers.\n *\n * The DER format uses the most significant bit as a sign bit (& 0x80).\n * If the significant bit is set AND the integer is positive, a 0x00 is prepended.\n *\n * Examples:\n *\n *      0 =>     0x00\n *      1 =>     0x01\n *     -1 =>     0xff\n *    127 =>     0x7f\n *   -127 =>     0x81\n *    128 =>   0x0080\n *   -128 =>     0x80\n *    255 =>   0x00ff\n *   -255 =>   0xff01\n *  16300 =>   0x3fac\n * -16300 =>   0xc054\n *  62300 => 0x00f35c\n * -62300 => 0xff0ca4\n*/\nfunction encode (r, s) {\n  var lenR = r.length\n  var lenS = s.length\n  if (lenR === 0) throw new Error('R length is zero')\n  if (lenS === 0) throw new Error('S length is zero')\n  if (lenR > 33) throw new Error('R length is too long')\n  if (lenS > 33) throw new Error('S length is too long')\n  if (r[0] & 0x80) throw new Error('R value is negative')\n  if (s[0] & 0x80) throw new Error('S value is negative')\n  if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) throw new Error('R value excessively padded')\n  if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) throw new Error('S value excessively padded')\n\n  var signature = Buffer.allocUnsafe(6 + lenR + lenS)\n\n  // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n  signature[0] = 0x30\n  signature[1] = signature.length - 2\n  signature[2] = 0x02\n  signature[3] = r.length\n  r.copy(signature, 4)\n  signature[4 + lenR] = 0x02\n  signature[5 + lenR] = s.length\n  s.copy(signature, 6 + lenR)\n\n  return signature\n}\n\nmodule.exports = {\n  check: check,\n  decode: decode,\n  encode: encode\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = slice;\nfunction slice(arrayLike, start) {\n    start = start | 0;\n    var newLen = Math.max(arrayLike.length - start, 0);\n    var newArr = Array(newLen);\n    for (var idx = 0; idx < newLen; idx++) {\n        newArr[idx] = arrayLike[start + idx];\n    }\n    return newArr;\n}\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = onlyOnce;\nfunction onlyOnce(fn) {\n    return function () {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\nmodule.exports = exports[\"default\"];","module.exports = require('./lib/murmurHash3js');\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = asyncify;\n\nvar _isObject = require('lodash/isObject');\n\nvar _isObject2 = _interopRequireDefault(_isObject);\n\nvar _initialParams = require('./internal/initialParams');\n\nvar _initialParams2 = _interopRequireDefault(_initialParams);\n\nvar _setImmediate = require('./internal/setImmediate');\n\nvar _setImmediate2 = _interopRequireDefault(_setImmediate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    return (0, _initialParams2.default)(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if ((0, _isObject2.default)(result) && typeof result.then === 'function') {\n            result.then(function (value) {\n                invokeCallback(callback, null, value);\n            }, function (err) {\n                invokeCallback(callback, err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (e) {\n        (0, _setImmediate2.default)(rethrow, e);\n    }\n}\n\nfunction rethrow(error) {\n    throw error;\n}\nmodule.exports = exports['default'];","var Node = require('./lib/node')\n\nmodule.exports = isCircular\n\n/**\n * checks whether the object is circular\n * @param  {object}  obj - object to check circularity for\n * @return {Boolean} true if obj is circular, false if it is not\n */\nfunction isCircular (obj) {\n  if (!(obj instanceof Object)) {\n    throw new TypeError('\"obj\" must be an object (or inherit from it)')\n  }\n  return _isCircular(obj)\n}\n\n/**\n * @private\n * checks whether the object is circular\n * @param  {object}  obj - object to check circularity for\n * @param  {Node}    parentList - linked-list that contains all the object's parents\n * @return {Boolean} true if obj is circular, false if it is not\n */\nfunction _isCircular (obj, parentList) {\n  parentList = new Node(obj, parentList)\n\n  // breadth-first search for circular object\n  for (var key in obj) {\n    var val = obj[key]\n    if (val instanceof Object) {\n      if (parentList.contains(val) || _isCircular(val, parentList)) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n","//! stable.js 0.1.8, https://github.com/Two-Screen/stable\n//! © 2018 Angry Bytes and contributors. MIT licensed.\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.stable = factory());\n}(this, (function () { 'use strict';\n\n  // A stable array sort, because `Array#sort()` is not guaranteed stable.\n  // This is an implementation of merge sort, without recursion.\n\n  var stable = function (arr, comp) {\n    return exec(arr.slice(), comp)\n  };\n\n  stable.inplace = function (arr, comp) {\n    var result = exec(arr, comp);\n\n    // This simply copies back if the result isn't in the original array,\n    // which happens on an odd number of passes.\n    if (result !== arr) {\n      pass(result, null, arr.length, arr);\n    }\n\n    return arr\n  };\n\n  // Execute the sort using the input array and a second buffer as work space.\n  // Returns one of those two, containing the final result.\n  function exec(arr, comp) {\n    if (typeof(comp) !== 'function') {\n      comp = function (a, b) {\n        return String(a).localeCompare(b)\n      };\n    }\n\n    // Short-circuit when there's nothing to sort.\n    var len = arr.length;\n    if (len <= 1) {\n      return arr\n    }\n\n    // Rather than dividing input, simply iterate chunks of 1, 2, 4, 8, etc.\n    // Chunks are the size of the left or right hand in merge sort.\n    // Stop when the left-hand covers all of the array.\n    var buffer = new Array(len);\n    for (var chk = 1; chk < len; chk *= 2) {\n      pass(arr, comp, chk, buffer);\n\n      var tmp = arr;\n      arr = buffer;\n      buffer = tmp;\n    }\n\n    return arr\n  }\n\n  // Run a single pass with the given chunk size.\n  var pass = function (arr, comp, chk, result) {\n    var len = arr.length;\n    var i = 0;\n    // Step size / double chunk size.\n    var dbl = chk * 2;\n    // Bounds of the left and right chunks.\n    var l, r, e;\n    // Iterators over the left and right chunk.\n    var li, ri;\n\n    // Iterate over pairs of chunks.\n    for (l = 0; l < len; l += dbl) {\n      r = l + chk;\n      e = r + chk;\n      if (r > len) r = len;\n      if (e > len) e = len;\n\n      // Iterate both chunks in parallel.\n      li = l;\n      ri = r;\n      while (true) {\n        // Compare the chunks.\n        if (li < r && ri < e) {\n          // This works for a regular `sort()` compatible comparator,\n          // but also for a simple comparator like: `a > b`\n          if (comp(arr[li], arr[ri]) <= 0) {\n            result[i++] = arr[li++];\n          }\n          else {\n            result[i++] = arr[ri++];\n          }\n        }\n        // Nothing to compare, just flush what's left.\n        else if (li < r) {\n          result[i++] = arr[li++];\n        }\n        else if (ri < e) {\n          result[i++] = arr[ri++];\n        }\n        // Both iterators are at the chunk ends.\n        else {\n          break\n        }\n      }\n    }\n  };\n\n  return stable;\n\n})));\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.hasNextTick = exports.hasSetImmediate = undefined;\nexports.fallback = fallback;\nexports.wrap = wrap;\n\nvar _slice = require('./slice');\n\nvar _slice2 = _interopRequireDefault(_slice);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar hasSetImmediate = exports.hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = exports.hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return function (fn /*, ...args*/) {\n        var args = (0, _slice2.default)(arguments, 1);\n        defer(function () {\n            fn.apply(null, args);\n        });\n    };\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nexports.default = wrap(_defer);"],"sourceRoot":""}